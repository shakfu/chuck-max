/*
3 channel drum sequencer that emulates the Mutable Instruments Eurorack module "Grids"
ported from: https://github.com/ValleyAudio/ValleyRackFree/tree/v2.0/src/Topograph
VCV Rack docs: https://valleyaudio.github.io/rack/topograph/

"Rather than relying on the user to manually enter patterns, 
the modules each have a vast, built-in map of drum patterns 
that can be seamlessy explored using high level controls, 
making this a 'topographic' sequencer (hence the name). 
The sequences include various styles of pattern 'skeletons' 
from around the world, and the density of each part can be 
set from sparse and simple through to dense and frantic."

Author: azaday
Originally made: 1/19/2023
Revised:        1/21/2025

Ideas:
- what if each instrument could be stepped at a different rate?
- what if the instrument patterns could be ping-ponged / reversed / etc
- add probability gate on each hit?
- ratchet effect
*/

public class Topograph 
{
    false => int mode_henri; // TODO wtf does henri actually do? visualize somehow
    // x and y are set by pos(), range 0-1
    float x;  
    float y;
    float chaos; // TODO impl
    [127, 127, 127] @=> int _density[];  // set in density()
    // TODO swing?

    0 => static int Inst_Kick;
    1 => static int Inst_Snare;
    2 => static int Inst_Hat;

    // privates
    TopographDrumMap dm;
    [
        [ dm.node_10, dm.node_8, dm.node_0, dm.node_9, dm.node_11 ],
        [ dm.node_15, dm.node_7, dm.node_13, dm.node_12, dm.node_6 ],
        [ dm.node_18, dm.node_14, dm.node_4, dm.node_5, dm.node_3 ],
        [ dm.node_23, dm.node_16, dm.node_21, dm.node_1, dm.node_2 ],
        [ dm.node_24, dm.node_19, dm.node_17, dm.node_20, dm.node_22 ]
    ] @=> int drum_map[][][];
    dm.node_10.size() / 3 => int STEPS_PER_PATTERN;
    int _step;

    // x,y in range [0, 1]
    fun void pos(float x, float y) {
        Math.clampf(x, 0.0, 1.0) * 4.0 => this.x;
        Math.clampf(y, 0.0, 1.0) * 4.0 => this.y;
    }

    // `d` in range [0, 1], inst is one of Inst_ enums
    fun void density(int inst, float d) {
        if (inst < 0 || inst > 2) return;
        (Math.clampf(d, 0.0, 1.0) * 255) $ int => this._density[inst];
    }

    // advance sequencer by 1 step (8 steps per qt note, 32 steps = 4 qt notes per node_X pattern)
    // 1 step = one 32nd note 
    // returns @(kick_vel, snare_vel, hat_vel)
    int _velocities[3];
    fun int[] step() {

        if (_step == 0) {
            // beginning of pattern, set randomization levels here if so wished...
        }

        Math.clampi(this.x $ int, 0, 3) => int map_i;
        Math.clampi(this.y $ int, 0, 3) => int map_j;
        this.x - map_i => float x_frac;
        this.y - map_j => float y_frac;

        // 4 nearest patterns to @(x,y)
        drum_map[map_i][map_j] @=> int a_map[];
        drum_map[map_i + 1][map_j] @=> int b_map[];
        drum_map[map_i][map_j + 1] @=> int c_map[];
        drum_map[map_i + 1][map_j + 1] @=> int d_map[];

        for (0 => int inst; inst < 3; ++inst) {  
            0 => int level;

            // read drum map
            (inst * STEPS_PER_PATTERN) + _step => int offset;
            // a c
            // b d
            a_map[offset] => int a;
            b_map[offset] => int b;
            c_map[offset] => int c;
            d_map[offset] => int d;


            if (mode_henri) { // Mode_Henri
                // scale x,y to range [0, 255]
                ((this.x / 4.0) * 255) $ int => int x;
                ((this.y / 4.0) * 255) $ int => int y;

                127 => int maxValue;
                (( a * x + b * (maxValue - x) ) * y + (c * x + d * (maxValue - x)) *
                    ( maxValue - y )) / maxValue / maxValue => level; 
                <<< "level: " + level>>>;
                if (level > 255) { 255 => level; }
            } else {
                // bilinear filter on given samples (a,b,c,d) given sample position @(x,y)
                (
                    (a * (1 - x_frac) + b * x_frac) * (1 - y_frac) + 
                    (c * (1 - x_frac) + d * x_frac) * (y_frac)
                ) $ int => level;
                T.assert(level >= 0 && level <= 255, "level out of bounds: " + level);
            }

            // TODO: better place to add randomization
            255 - this._density[inst] => int threshold;
            T.assert(_velocities[inst] <= 255, "velocity out of bounds " + _velocities[inst]);
            if (level > threshold) {
                if (level > 192) {
                    // accent
                }
                level => _velocities[inst];
            } else {
                0 => _velocities[inst];
            }
        }

        // update step count
        (_step + 1) % 32 => _step;

        return _velocities;
        // return @(_velocities[0], _velocities[1], _velocities[2]);
    }
}

class TopographDrumMap
{
    // each value is NOT velocity, but rather the density threshold at which that step is triggered
    // values > 192 trigger accent events
    // TODO: experiment with it being tied to velocity
    // each value is a u8 [0, 255]
    [
        // kick
        255,      0,      0,      0,      0,      0,    145,      0,
        0,      0,      0,      0,    218,      0,      0,      0,
        72,      0,     36,      0,    182,      0,      0,      0,
        109,      0,      0,      0,     72,      0,      0,      0,
        // snare
        36,      0,    109,      0,      0,      0,      8,      0,
        255,      0,      0,      0,      0,      0,     72,      0,
        0,      0,    182,      0,      0,      0,     36,      0,
        218,      0,      0,      0,    145,      0,      0,      0,
        // hat
        170,      0,    113,      0,    255,      0,     56,      0,
        170,      0,    141,      0,    198,      0,     56,      0,
        170,      0,    113,      0,    226,      0,     28,      0,
        170,      0,    113,      0,    198,      0,     85,      0
    ] @=> int node_0[];
    [
        229,      0,     25,      0,    102,      0,     25,      0,
        204,      0,     25,      0,     76,      0,      8,      0,
        255,      0,      8,      0,     51,      0,     25,      0,
        178,      0,     25,      0,    153,      0,    127,      0,

        28,      0,    198,      0,     56,      0,     56,      0,
        226,      0,     28,      0,    141,      0,     28,      0,
        28,      0,    170,      0,     28,      0,     28,      0,
        255,      0,    113,      0,     85,      0,     85,      0,
        
        159,      0,    159,      0,    255,      0,     63,      0,
        159,      0,    159,      0,    191,      0,     31,      0,
        159,      0,    127,      0,    255,      0,     31,      0,
        159,      0,    127,      0,    223,      0,     95,      0
    ] @=> int node_1[];
    [
        255,      0,      0,      0,    127,      0,      0,      0,
        0,      0,    102,      0,      0,      0,    229,      0,
        0,      0,    178,      0,    204,      0,      0,      0,
        76,      0,     51,      0,    153,      0,     25,      0,
        0,      0,    127,      0,      0,      0,      0,      0,
        255,      0,    191,      0,     31,      0,     63,      0,
        0,      0,     95,      0,      0,      0,      0,      0,
        223,      0,      0,      0,     31,      0,    159,      0,
        255,      0,     85,      0,    148,      0,     85,      0,
        127,      0,     85,      0,    106,      0,     63,      0,
        212,      0,    170,      0,    191,      0,    170,      0,
        85,      0,     42,      0,    233,      0,     21,      0
    ] @=> int node_2[];
    [
        255,      0,    212,      0,     63,      0,      0,      0,
        106,      0,    148,      0,     85,      0,    127,      0,
        191,      0,     21,      0,    233,      0,      0,      0,
        21,      0,    170,      0,      0,      0,     42,      0,
        0,      0,      0,      0,    141,      0,    113,      0,
        255,      0,    198,      0,      0,      0,     56,      0,
        0,      0,     85,      0,     56,      0,     28,      0,
        226,      0,     28,      0,    170,      0,     56,      0,
        255,      0,    231,      0,    255,      0,    208,      0,
        139,      0,     92,      0,    115,      0,     92,      0,
        185,      0,     69,      0,     46,      0,     46,      0,
        162,      0,     23,      0,    208,      0,     46,      0
    ] @=> int node_3[];
    [
        255,      0,     31,      0,     63,      0,     63,      0,
        127,      0,     95,      0,    191,      0,     63,      0,
        223,      0,     31,      0,    159,      0,     63,      0,
        31,      0,     63,      0,     95,      0,     31,      0,
        8,      0,      0,      0,     95,      0,     63,      0,
        255,      0,      0,      0,    127,      0,      0,      0,
        8,      0,      0,      0,    159,      0,     63,      0,
        255,      0,    223,      0,    191,      0,     31,      0,
        76,      0,     25,      0,    255,      0,    127,      0,
        153,      0,     51,      0,    204,      0,    102,      0,
        76,      0,     51,      0,    229,      0,    127,      0,
        153,      0,     51,      0,    178,      0,    102,      0
    ] @=> int node_4[];
    [
        255,      0,     51,      0,     25,      0,     76,      0,
        0,      0,      0,      0,    102,      0,      0,      0,
        204,      0,    229,      0,      0,      0,    178,      0,
        0,      0,    153,      0,    127,      0,      8,      0,
        178,      0,    127,      0,    153,      0,    204,      0,
        255,      0,      0,      0,     25,      0,     76,      0,
        102,      0,     51,      0,      0,      0,      0,      0,
        229,      0,     25,      0,     25,      0,    204,      0,
        178,      0,    102,      0,    255,      0,     76,      0,
        127,      0,     76,      0,    229,      0,     76,      0,
        153,      0,    102,      0,    255,      0,     25,      0,
        127,      0,     51,      0,    204,      0,     51,      0
    ] @=> int node_5[];
    [
        255,      0,      0,      0,    223,      0,      0,      0,
        31,      0,      8,      0,    127,      0,      0,      0,
        95,      0,      0,      0,    159,      0,      0,      0,
        95,      0,     63,      0,    191,      0,      0,      0,
        51,      0,    204,      0,      0,      0,    102,      0,
        255,      0,    127,      0,      8,      0,    178,      0,
        25,      0,    229,      0,      0,      0,     76,      0,
        204,      0,    153,      0,     51,      0,     25,      0,
        255,      0,    226,      0,    255,      0,    255,      0,
        198,      0,     28,      0,    141,      0,     56,      0,
        170,      0,     56,      0,     85,      0,     28,      0,
        170,      0,     28,      0,    113,      0,     56,      0
    ] @=> int node_6[];
    [
        223,      0,      0,      0,     63,      0,      0,      0,
        95,      0,      0,      0,    223,      0,     31,      0,
        255,      0,      0,      0,    159,      0,      0,      0,
        127,      0,     31,      0,    191,      0,     31,      0,
        0,      0,      0,      0,    109,      0,      0,      0,
        218,      0,      0,      0,    182,      0,     72,      0,
        8,      0,     36,      0,    145,      0,     36,      0,
        255,      0,      8,      0,    182,      0,     72,      0,
        255,      0,     72,      0,    218,      0,     36,      0,
        218,      0,      0,      0,    145,      0,      0,      0,
        255,      0,     36,      0,    182,      0,     36,      0,
        182,      0,      0,      0,    109,      0,      0,      0
    ] @=> int node_7[];
    [
        255,      0,      0,      0,    218,      0,      0,      0,
        36,      0,      0,      0,    218,      0,      0,      0,
        182,      0,    109,      0,    255,      0,      0,      0,
        0,      0,      0,      0,    145,      0,     72,      0,
        159,      0,      0,      0,     31,      0,    127,      0,
        255,      0,     31,      0,      0,      0,     95,      0,
        8,      0,      0,      0,    191,      0,     31,      0,
        255,      0,     31,      0,    223,      0,     63,      0,
        255,      0,     31,      0,     63,      0,     31,      0,
        95,      0,     31,      0,     63,      0,    127,      0,
        159,      0,     31,      0,     63,      0,     31,      0,
        223,      0,    223,      0,    191,      0,    191,      0
    ] @=> int node_8[];
    [
        226,      0,     28,      0,     28,      0,    141,      0,
        8,      0,      8,      0,    255,      0,      8,      0,
        113,      0,     28,      0,    198,      0,     85,      0,
        56,      0,    198,      0,    170,      0,     28,      0,
        8,      0,     95,      0,      8,      0,      8,      0,
        255,      0,     63,      0,     31,      0,    223,      0,
        8,      0,     31,      0,    191,      0,      8,      0,
        255,      0,    127,      0,    127,      0,    159,      0,
        115,      0,     46,      0,    255,      0,    185,      0,
        139,      0,     23,      0,    208,      0,    115,      0,
        231,      0,     69,      0,    255,      0,    162,      0,
        139,      0,    115,      0,    231,      0,     92,      0
    ] @=> int node_9[];
    [
        145,      0,      0,      0,      0,      0,    109,      0,
        0,      0,      0,      0,    255,      0,    109,      0,
        72,      0,    218,      0,      0,      0,      0,      0,
        36,      0,      0,      0,    182,      0,      0,      0,
        0,      0,    127,      0,    159,      0,    127,      0,
        159,      0,    191,      0,    223,      0,     63,      0,
        255,      0,     95,      0,     31,      0,     95,      0,
        31,      0,      8,      0,     63,      0,      8,      0,
        255,      0,      0,      0,    145,      0,      0,      0,
        182,      0,    109,      0,    109,      0,    109,      0,
        218,      0,      0,      0,     72,      0,      0,      0,
        182,      0,     72,      0,    182,      0,     36,      0
    ] @=> int node_10[];
    [
        255,      0,      0,      0,      0,      0,      0,      0,
        0,      0,      0,      0,      0,      0,      0,      0,
        255,      0,      0,      0,    218,      0,     72,     36,
        0,      0,    182,      0,      0,      0,    145,    109,
        0,      0,    127,      0,      0,      0,     42,      0,
        212,      0,      0,    212,      0,      0,    212,      0,
        0,      0,      0,      0,     42,      0,      0,      0,
        255,      0,      0,      0,    170,    170,    127,     85,
        145,      0,    109,    109,    218,    109,     72,      0,
        145,      0,     72,      0,    218,      0,    109,      0,
        182,      0,    109,      0,    255,      0,     72,      0,
        182,    109,     36,    109,    255,    109,    109,      0
    ] @=> int node_11[];
    [
        255,      0,      0,      0,    255,      0,    191,      0,
        0,      0,      0,      0,     95,      0,     63,      0,
        31,      0,      0,      0,    223,      0,    223,      0,
        0,      0,      8,      0,    159,      0,    127,      0,
        0,      0,     85,      0,     56,      0,     28,      0,
        255,      0,     28,      0,      0,      0,    226,      0,
        0,      0,    170,      0,     56,      0,    113,      0,
        198,      0,      0,      0,    113,      0,    141,      0,
        255,      0,     42,      0,    233,      0,     63,      0,
        212,      0,     85,      0,    191,      0,    106,      0,
        191,      0,     21,      0,    170,      0,      8,      0,
        170,      0,    127,      0,    148,      0,    148,      0
    ] @=> int node_12[];
    [
        255,      0,      0,      0,      0,      0,     63,      0,
        191,      0,     95,      0,     31,      0,    223,      0,
        255,      0,     63,      0,     95,      0,     63,      0,
        159,      0,      0,      0,      0,      0,    127,      0,
        72,      0,      0,      0,      0,      0,      0,      0,
        255,      0,      0,      0,      0,      0,      0,      0,
        72,      0,     72,      0,     36,      0,      8,      0,
        218,      0,    182,      0,    145,      0,    109,      0,
        255,      0,    162,      0,    231,      0,    162,      0,
        231,      0,    115,      0,    208,      0,    139,      0,
        185,      0,     92,      0,    185,      0,     46,      0,
        162,      0,     69,      0,    162,      0,     23,      0
    ] @=> int node_13[];
    [
        255,      0,      0,      0,     51,      0,      0,      0,
        0,      0,      0,      0,    102,      0,      0,      0,
        204,      0,      0,      0,    153,      0,      0,      0,
        0,      0,      0,      0,     51,      0,      0,      0,
        0,      0,      0,      0,      8,      0,     36,      0,
        255,      0,      0,      0,    182,      0,      8,      0,
        0,      0,      0,      0,     72,      0,    109,      0,
        145,      0,      0,      0,    255,      0,    218,      0,
        212,      0,      8,      0,    170,      0,      0,      0,
        127,      0,      0,      0,     85,      0,      8,      0,
        255,      0,      8,      0,    170,      0,      0,      0,
        127,      0,      0,      0,     42,      0,      8,      0
    ] @=> int node_14[];
    [
        255,      0,      0,      0,      0,      0,      0,      0,
        36,      0,      0,      0,    182,      0,      0,      0,
        218,      0,      0,      0,      0,      0,      0,      0,
        72,      0,      0,      0,    145,      0,    109,      0,
        36,      0,     36,      0,      0,      0,      0,      0,
        255,      0,      0,      0,    182,      0,      0,      0,
        0,      0,      0,      0,      0,      0,      0,    109,
        218,      0,      0,      0,    145,      0,     72,     72,
        255,      0,     28,      0,    226,      0,     56,      0,
        198,      0,      0,      0,      0,      0,     28,     28,
        170,      0,      0,      0,    141,      0,      0,      0,
        113,      0,      0,      0,     85,     85,     85,     85
    ] @=> int node_15[];
    [
        255,      0,      0,      0,      0,      0,     95,      0,
        0,      0,    127,      0,      0,      0,      0,      0,
        223,      0,     95,      0,     63,      0,     31,      0,
        191,      0,      0,      0,    159,      0,      0,      0,
        0,      0,     31,      0,    255,      0,      0,      0,
        0,      0,     95,      0,    223,      0,      0,      0,
        0,      0,     63,      0,    191,      0,      0,      0,
        0,      0,      0,      0,    159,      0,    127,      0,
        141,      0,     28,      0,     28,      0,     28,      0,
        113,      0,      8,      0,      8,      0,      8,      0,
        255,      0,      0,      0,    226,      0,      0,      0,
        198,      0,     56,      0,    170,      0,     85,      0
    ] @=> int node_16[];
    [
        255,      0,      0,      0,      8,      0,      0,      0,
        182,      0,      0,      0,     72,      0,      0,      0,
        218,      0,      0,      0,     36,      0,      0,      0,
        145,      0,      0,      0,    109,      0,      0,      0,
        0,      0,     51,     25,     76,     25,     25,      0,
        153,      0,      0,      0,    127,    102,    178,      0,
        204,      0,      0,      0,      0,      0,    255,      0,
        0,      0,    102,      0,    229,      0,     76,      0,
        113,      0,      0,      0,    141,      0,     85,      0,
        0,      0,      0,      0,    170,      0,      0,      0,
        56,     28,    255,      0,      0,      0,      0,      0,
        198,      0,      0,      0,    226,      0,      0,      0
    ] @=> int node_17[];
    [
        255,      0,      8,      0,     28,      0,     28,      0,
        198,      0,     56,      0,     56,      0,     85,      0,
        255,      0,     85,      0,    113,      0,    113,      0,
        226,      0,    141,      0,    170,      0,    141,      0,
        0,      0,      0,      0,      0,      0,      0,      0,
        255,      0,      0,      0,    127,      0,      0,      0,
        0,      0,      0,      0,      0,      0,      0,      0,
        63,      0,      0,      0,    191,      0,      0,      0,
        255,      0,      0,      0,    255,      0,    127,      0,
        0,      0,     85,      0,      0,      0,    212,      0,
        0,      0,    212,      0,     42,      0,    170,      0,
        0,      0,    127,      0,      0,      0,      0,      0
    ] @=> int node_18[];
    [
        255,      0,      0,      0,      0,      0,    218,      0,
        182,      0,      0,      0,      0,      0,    145,      0,
        145,      0,     36,      0,      0,      0,    109,      0,
        109,      0,      0,      0,     72,      0,     36,      0,
        0,      0,      0,      0,    109,      0,      8,      0,
        72,      0,      0,      0,    255,      0,    182,      0,
        0,      0,      0,      0,    145,      0,      8,      0,
        36,      0,      8,      0,    218,      0,    182,      0,
        255,      0,      0,      0,      0,      0,    226,      0,
        85,      0,      0,      0,    141,      0,      0,      0,
        0,      0,      0,      0,    170,      0,     56,      0,
        198,      0,      0,      0,    113,      0,     28,      0
    ] @=> int node_19[];
    [
        255,      0,      0,      0,    113,      0,      0,      0,
        198,      0,     56,      0,     85,      0,     28,      0,
        255,      0,      0,      0,    226,      0,      0,      0,
        170,      0,      0,      0,    141,      0,      0,      0,
        0,      0,      0,      0,      0,      0,      0,      0,
        255,      0,    145,      0,    109,      0,    218,      0,
        36,      0,    182,      0,     72,      0,     72,      0,
        255,      0,      0,      0,      0,      0,    109,      0,
        36,      0,     36,      0,    145,      0,      0,      0,
        72,      0,     72,      0,    182,      0,      0,      0,
        72,      0,     72,      0,    218,      0,      0,      0,
        109,      0,    109,      0,    255,      0,      0,      0
    ] @=> int node_20[];
    [
        255,      0,      0,      0,    218,      0,      0,      0,
        145,      0,      0,      0,     36,      0,      0,      0,
        218,      0,      0,      0,     36,      0,      0,      0,
        182,      0,     72,      0,      0,      0,    109,      0,
        0,      0,      0,      0,      8,      0,      0,      0,
        255,      0,     85,      0,    212,      0,     42,      0,
        0,      0,      0,      0,      8,      0,      0,      0,
        85,      0,    170,      0,    127,      0,     42,      0,
        109,      0,    109,      0,    255,      0,      0,      0,
        72,      0,     72,      0,    218,      0,      0,      0,
        145,      0,    182,      0,    255,      0,      0,      0,
        36,      0,     36,      0,    218,      0,      8,      0
    ] @=> int node_21[];
    [
        255,      0,      0,      0,     42,      0,      0,      0,
        212,      0,      0,      0,      8,      0,    212,      0,
        170,      0,      0,      0,     85,      0,      0,      0,
        212,      0,      8,      0,    127,      0,      8,      0,
        255,      0,     85,      0,      0,      0,      0,      0,
        226,      0,     85,      0,      0,      0,    198,      0,
        0,      0,    141,      0,     56,      0,      0,      0,
        170,      0,     28,      0,      0,      0,    113,      0,
        113,      0,     56,      0,    255,      0,      0,      0,
        85,      0,     56,      0,    226,      0,      0,      0,
        0,      0,    170,      0,      0,      0,    141,      0,
        28,      0,     28,      0,    198,      0,     28,      0
    ] @=> int node_22[];
    [
        255,      0,      0,      0,    229,      0,      0,      0,
        204,      0,    204,      0,      0,      0,     76,      0,
        178,      0,    153,      0,     51,      0,    178,      0,
        178,      0,    127,      0,    102,     51,     51,     25,
        0,      0,      0,      0,      0,      0,      0,     31,
        0,      0,      0,      0,    255,      0,      0,     31,
        0,      0,      8,      0,      0,      0,    191,    159,
        127,     95,     95,      0,    223,      0,     63,      0,
        255,      0,    255,      0,    204,    204,    204,    204,
        0,      0,     51,     51,     51,     51,      0,      0,
        204,      0,    204,      0,    153,    153,    153,    153,
        153,      0,      0,      0,    102,    102,    102,    102
    ] @=> int node_23[];
    [
        170,      0,      0,      0,      0,    255,      0,      0,
        198,      0,      0,      0,      0,     28,      0,      0,
        141,      0,      0,      0,      0,    226,      0,      0,
        56,      0,      0,    113,      0,     85,      0,      0,
        255,      0,      0,      0,      0,    113,      0,      0,
        85,      0,      0,      0,      0,    226,      0,      0,
        141,      0,      0,      8,      0,    170,     56,     56,
        198,      0,      0,     56,      0,    141,     28,      0,
        255,      0,      0,      0,      0,    191,      0,      0,
        159,      0,      0,      0,      0,    223,      0,      0,
        95,      0,      0,      0,      0,     63,      0,      0,
        127,      0,      0,      0,      0,     31,      0,      0
    ] @=> int node_24[];
}